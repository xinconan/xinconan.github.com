<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XINCONAN的博客</title>
  <subtitle>这个家伙很懒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xinconan.github.io/"/>
  <updated>2017-03-30T12:19:48.546Z</updated>
  <id>https://xinconan.github.io/</id>
  
  <author>
    <name>XINCONAN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用svg创建icon-font图标</title>
    <link href="https://xinconan.github.io/2017/03/29/create-icon-font-with-svg/"/>
    <id>https://xinconan.github.io/2017/03/29/create-icon-font-with-svg/</id>
    <published>2017-03-29T11:43:02.000Z</published>
    <updated>2017-03-30T12:19:48.546Z</updated>
    
    <content type="html"><![CDATA[<p>在开发webapp时，经常会用到UI给的小图标，UI一般会提供png和svg两种格式。使用png经常需要考虑不同分辨率和dpr设备的差异，一个图标UI可能会提供两到三种不同大小的图片，这样处理很不方便。直接使用svg的话，svg单独一个文件会耗网络请求，嵌入到html中又会使html变得臃肿，重复利用率不高。使用icon-font可以直接使用class的方式，显示图标，而且和字体一样，可以设置大小和颜色，非常方便。</p>
<p>介绍一种可以直接将svg创建icon-font字体的网站，<a href="https://icomoon.io/app" target="_blank" rel="external">https://icomoon.io/app</a>，如下图所示，直接导入UI给的svg（最好提前用class的方式进行命名，方便后续使用）。<br><img src="https://xinconan.oschina.io/blogimages/icomoon.png" alt="icomoon.io"><br>选择要导出的图标，点击“生成字体”按钮，在该页面可以预览要导出的字体图标及对应的编码。<br><img src="https://xinconan.oschina.io/blogimages/icomoon_preview.png" alt="icomoon.io"><br>点击设置，可以设置字体的名称和class前缀，还可以生成对应的sass、stylus、less文件等。<br><img src="https://xinconan.oschina.io/blogimages/icomoon_config.png" alt="icomoon.io"><br>点击“download”，就可以下载字体，然后进行使用啦。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发webapp时，经常会用到UI给的小图标，UI一般会提供png和svg两种格式。使用png经常需要考虑不同分辨率和dpr设备的差异，一个图标UI可能会提供两到三种不同大小的图片，这样处理很不方便。直接使用svg的话，svg单独一个文件会耗网络请求，嵌入到html中又会
    
    </summary>
    
    
      <category term="icon-font" scheme="https://xinconan.github.io/tags/icon-font/"/>
    
  </entry>
  
  <entry>
    <title>ng-src图片加载失败怎么办</title>
    <link href="https://xinconan.github.io/2017/01/05/if-ngSrc-not-work/"/>
    <id>https://xinconan.github.io/2017/01/05/if-ngSrc-not-work/</id>
    <published>2017-01-05T10:55:33.000Z</published>
    <updated>2017-01-05T12:20:52.915Z</updated>
    
    <content type="html"><![CDATA[<p>在Angular中，加载图片的方法是使用<code>ng-src</code>标签，如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">ng-src</span>=<span class="string">"&#123;&#123;imgUrl&#125;&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p>其中<code>imgUrl</code>为图片地址，如果图片正常能显示，那这么使用一点问题没有，但是，如果图片加载失败了（例如该图片已经不存在，从而出现404错误），在该放图片的地方就会出现一个难看的图片加载失败图标，如果想把这个图标换成你自定义的图片，可以如下这么做：<br><strong>一、自定义指令（推荐）</strong><br><strong>HTML:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">ng-src</span>=<span class="string">"&#123;&#123;imgUrl&#125;&#125;"</span> <span class="attr">err-src</span>=<span class="string">"&#123;&#123;errUrl&#125;&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>JavaScript:</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"MyApp"</span>, []);</div><div class="line"></div><div class="line">app.directive(<span class="string">'errSrc'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">link</span>: <span class="function"><span class="keyword">function</span>(<span class="params">scope, element, attrs</span>) </span>&#123;</div><div class="line">      element.bind(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (attrs.src != attrs.errSrc) &#123;</div><div class="line">          attrs.$set(‘src‘, attrs.errSrc);</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>这样一来，就把错误图标换成了你自己指定的地址<code>errUrl</code>，前提是<code>errUrl</code>这个图片是存在的。</p>
<p><strong>二、使用onerror属性</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">ng-src</span>=<span class="string">"&#123;&#123;imgUrl&#125;&#125;"</span> <span class="attr">onerror</span>=<span class="string">"this.src='/img/404.png'"</span> /&gt;</span></div></pre></td></tr></table></figure></p>
<p>使用这个方法，只适用于固定地址的图片，不能使用ng-bind的形式。</p>
<h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><blockquote>
<p><a href="http://www.mamicode.com/info-detail-653185.html" target="_blank" rel="external">AngularJS中如果ng-src 图片加载失败怎么办</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Angular中，加载图片的方法是使用&lt;code&gt;ng-src&lt;/code&gt;标签，如：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/di
    
    </summary>
    
    
      <category term="angular" scheme="https://xinconan.github.io/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>UC Browser Unsupported JavaScript</title>
    <link href="https://xinconan.github.io/2016/12/21/UC-Browser-Unsupported-JavaScript/"/>
    <id>https://xinconan.github.io/2016/12/21/UC-Browser-Unsupported-JavaScript/</id>
    <published>2016-12-21T03:13:10.000Z</published>
    <updated>2016-12-21T05:24:44.340Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录在开发过程中，使用UC Android浏览器遇到的一些问题。<br>不支持的JS方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.table();</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录在开发过程中，使用UC Android浏览器遇到的一些问题。&lt;br&gt;不支持的JS方法：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;li
    
    </summary>
    
    
      <category term="UC" scheme="https://xinconan.github.io/tags/UC/"/>
    
      <category term="JavaScript" scheme="https://xinconan.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>typeerror-cannot-read-property-insertbefore-of-null</title>
    <link href="https://xinconan.github.io/2016/10/14/typeerror-cannot-read-property-insertbefore-of-null/"/>
    <id>https://xinconan.github.io/2016/10/14/typeerror-cannot-read-property-insertbefore-of-null/</id>
    <published>2016-10-14T06:28:43.000Z</published>
    <updated>2016-10-25T07:17:15.274Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在使用<code>angular</code>进行开发的时候，出现了如下错误：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">TypeError</span>: Cannot read property <span class="string">'insertBefore'</span> <span class="keyword">of</span> <span class="literal">null</span></div></pre></td></tr></table></figure></p>
<p>在网上找了一些资料，总结了下，需要在<code>ng-repeat</code>、<code>ng-if</code>等标签外面再加个<code>div</code>标签，<br>加上了就没有报错。如果当前页面没有用到<code>ng-repeat</code>、<code>ng-if</code>之类的标签，就需要从父路由中找了。<br>错误前：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-if</span>=<span class="string">"view.type !== 'ali'"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>其他内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>修改后：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-if</span>=<span class="string">"view.type !== 'ali'"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>其他内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天在使用&lt;code&gt;angular&lt;/code&gt;进行开发的时候，出现了如下错误：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1
    
    </summary>
    
    
      <category term="angular" scheme="https://xinconan.github.io/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>jekyll转hexo</title>
    <link href="https://xinconan.github.io/2016/10/09/change-to-hexo/"/>
    <id>https://xinconan.github.io/2016/10/09/change-to-hexo/</id>
    <published>2016-10-09T10:23:00.000Z</published>
    <updated>2016-10-09T10:28:20.744Z</updated>
    
    <content type="html"><![CDATA[<p>之前建的博客是基于<code>Jekyll</code>的，然后也没发过博客。现在试试<code>hexo</code>，以后就用它了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前建的博客是基于&lt;code&gt;Jekyll&lt;/code&gt;的，然后也没发过博客。现在试试&lt;code&gt;hexo&lt;/code&gt;，以后就用它了。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
